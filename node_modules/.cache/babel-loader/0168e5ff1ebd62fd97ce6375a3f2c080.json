{"ast":null,"code":"import React from'react';import{Table}from'antd';import{useSelector}from'react-redux';export default function DetailTable(){// get the user's details from the store\nvar details=useSelector(function(state){return state.details;});return React.createElement(Table,{style:tableStyle,columns:columns,dataSource:details,onChange:onChange});}// column names and details for the table\nvar columns=[{title:'firstName',dataIndex:'firstName',// specify the condition of filtering result\nsorter:function sorter(a,b){return a.firstName.length-b.firstName.length;},sortDirections:['descend','ascend']},{title:'lastName',dataIndex:'lastName',// specify the condition of filtering result\nsorter:function sorter(a,b){return a.lastName.length-b.lastName.length;},sortDirections:['descend','ascend']},{title:'age',dataIndex:'age',defaultSortOrder:'descend',sorter:function sorter(a,b){return a.age-b.age;}},{title:'dateOfBirth',dataIndex:'dateOfBirth',defaultSortOrder:'descend',sorter:function sorter(a,b){return a.dateOfBirth-b.dateOfBirth;}},{title:'hobbies',dataIndex:'hobbies',sorter:function sorter(a,b){return a.hobbies.length-b.hobbies.length;},sortDirections:['descend','ascend']}];// css styles for the table\nvar tableStyle={width:\"80%\",background:\"white\",margin:\"7% auto\"};function onChange(pagination,filters,sorter,extra){console.log('params',pagination,filters,sorter,extra);}","map":{"version":3,"sources":["/home/xander/Documents/workspace/enye/form/src/components/Table.js"],"names":["React","Table","useSelector","DetailTable","details","state","tableStyle","columns","onChange","title","dataIndex","sorter","a","b","firstName","length","sortDirections","lastName","defaultSortOrder","age","dateOfBirth","hobbies","width","background","margin","pagination","filters","extra","console","log"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,KAAsB,MAAtB,CACA,OAASC,WAAT,KAA4B,aAA5B,CAIA,cAAe,SAASC,CAAAA,WAAT,EAAuB,CAEpC;AACA,GAAMC,CAAAA,OAAO,CAACF,WAAW,CAAC,SAAAG,KAAK,QAAEA,CAAAA,KAAK,CAACD,OAAR,EAAN,CAAzB,CAEA,MAEI,qBAAC,KAAD,EACE,KAAK,CAAEE,UADT,CAEE,OAAO,CAAEC,OAFX,CAGE,UAAU,CAAEH,OAHd,CAIE,QAAQ,CAAEI,QAJZ,EAFJ,CAWD,CAED;AACA,GAAMD,CAAAA,OAAO,CAAG,CACd,CACEE,KAAK,CAAE,WADT,CAEEC,SAAS,CAAE,WAFb,CAGE;AACAC,MAAM,CAAE,gBAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACE,SAAF,CAAYC,MAAZ,CAAqBF,CAAC,CAACC,SAAF,CAAYC,MAA3C,EAJV,CAKEC,cAAc,CAAE,CAAC,SAAD,CAAW,QAAX,CALlB,CADc,CAQd,CACEP,KAAK,CAAE,UADT,CAEEC,SAAS,CAAE,UAFb,CAGE;AACAC,MAAM,CAAE,gBAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACK,QAAF,CAAWF,MAAX,CAAoBF,CAAC,CAACI,QAAF,CAAWF,MAAzC,EAJV,CAKEC,cAAc,CAAE,CAAC,SAAD,CAAW,QAAX,CALlB,CARc,CAed,CACEP,KAAK,CAAE,KADT,CAEEC,SAAS,CAAE,KAFb,CAGEQ,gBAAgB,CAAE,SAHpB,CAIEP,MAAM,CAAE,gBAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACO,GAAF,CAAQN,CAAC,CAACM,GAApB,EAJV,CAfc,CAqBd,CACEV,KAAK,CAAE,aADT,CAEEC,SAAS,CAAE,aAFb,CAGEQ,gBAAgB,CAAE,SAHpB,CAIEP,MAAM,CAAE,gBAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACQ,WAAF,CAAgBP,CAAC,CAACO,WAA5B,EAJV,CArBc,CA2Bd,CACEX,KAAK,CAAE,SADT,CAEEC,SAAS,CAAE,SAFb,CAGEC,MAAM,CAAE,gBAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACS,OAAF,CAAUN,MAAV,CAAmBF,CAAC,CAACQ,OAAF,CAAUN,MAAvC,EAHV,CAIEC,cAAc,CAAE,CAAC,SAAD,CAAY,QAAZ,CAJlB,CA3Bc,CAAhB,CAmCA;AACA,GAAMV,CAAAA,UAAU,CAAC,CACbgB,KAAK,CAAC,KADO,CAEbC,UAAU,CAAC,OAFE,CAGbC,MAAM,CAAC,SAHM,CAAjB,CAMA,QAAShB,CAAAA,QAAT,CAAkBiB,UAAlB,CAA8BC,OAA9B,CAAuCf,MAAvC,CAA+CgB,KAA/C,CAAsD,CACpDC,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAsBJ,UAAtB,CAAkCC,OAAlC,CAA2Cf,MAA3C,CAAmDgB,KAAnD,EACD","sourcesContent":["import React from 'react'\nimport { Table } from 'antd';\nimport { useSelector } from 'react-redux'\n\n\n\nexport default function DetailTable (){\n  \n  // get the user's details from the store\n  const details=useSelector(state=>state.details)\n\n  return (\n\n      <Table \n        style={tableStyle}\n        columns={columns} \n        dataSource={details} \n        onChange={onChange} \n      />\n      \n  )\n    \n}\n\n// column names and details for the table\nconst columns = [\n  {\n    title: 'firstName',\n    dataIndex: 'firstName',\n    // specify the condition of filtering result\n    sorter: (a, b) => a.firstName.length - b.firstName.length,\n    sortDirections: ['descend','ascend'],\n  },\n  {\n    title: 'lastName',\n    dataIndex: 'lastName',\n    // specify the condition of filtering result\n    sorter: (a, b) => a.lastName.length - b.lastName.length,\n    sortDirections: ['descend','ascend'],\n  },\n  {\n    title: 'age',\n    dataIndex: 'age',\n    defaultSortOrder: 'descend',\n    sorter: (a, b) => a.age - b.age,\n  },\n  {\n    title: 'dateOfBirth',\n    dataIndex: 'dateOfBirth',\n    defaultSortOrder: 'descend',\n    sorter: (a, b) => a.dateOfBirth - b.dateOfBirth,\n  },\n  {\n    title: 'hobbies',\n    dataIndex: 'hobbies',\n    sorter: (a, b) => a.hobbies.length - b.hobbies.length,\n    sortDirections: ['descend', 'ascend'],\n  },\n];\n\n// css styles for the table\nconst tableStyle={\n    width:\"80%\",\n    background:\"white\",\n    margin:\"7% auto\"\n}\n\nfunction onChange(pagination, filters, sorter, extra) {\n  console.log('params', pagination, filters, sorter, extra);\n}\n\n"]},"metadata":{},"sourceType":"module"}