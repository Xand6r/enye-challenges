{"ast":null,"code":"var _jsxFileName = \"/home/xander/Documents/workspace/enye/form/src/components/InputForm.js\";\nimport React, { Component } from 'react';\nimport { Form, Icon, Input, Button, DatePicker } from 'antd';\nconst TextArea = Input.TextArea;\n\nclass InputForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log(\"Recieved Values of form\", values);\n        }\n      });\n    };\n  }\n\n  render() {\n    // defining some constants for use  \n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const config = {\n      rules: [{\n        type: 'object',\n        required: true,\n        message: 'Please select time!'\n      }]\n    };\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 5\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 15\n        }\n      }\n    };\n    const small = {}; // return the JSX to be displayed as the template\n\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, getFieldDecorator('firstName', {\n      rules: [{\n        required: true,\n        message: 'Please input your first name!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.95)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }),\n      placeholder: \"first name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, getFieldDecorator('lastName', {\n      rules: [{\n        required: true,\n        message: 'Please input your last name!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.95)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }),\n      placeholder: \"last name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, getFieldDecorator('date-picker', config)(React.createElement(DatePicker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      style: small,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, getFieldDecorator('age', {\n      rules: [{\n        required: true,\n        message: 'Please input your last age!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"number\",\n        style: {\n          color: 'rgba(0,0,0,.95)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }),\n      placeholder: \"age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, getFieldDecorator('hobbies', {\n      rules: [{\n        required: true,\n        message: 'Please input your Hobbies!'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 4,\n      prefix: React.createElement(Icon, {\n        type: \"text\",\n        style: {\n          color: 'rgba(0,0,0,.95)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }),\n      placeholder: \"Enter your hobbies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Log in\")));\n  }\n\n}\n\nconst WrappedNormalLoginForm = Form.create({\n  name: 'normal_login'\n})(InputForm);\nexport default WrappedNormalLoginForm;","map":{"version":3,"sources":["/home/xander/Documents/workspace/enye/form/src/components/InputForm.js"],"names":["React","Component","Form","Icon","Input","Button","DatePicker","TextArea","InputForm","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","render","getFieldDecorator","config","rules","type","required","message","formItemLayout","labelCol","xs","span","sm","wrapperCol","small","color","WrappedNormalLoginForm","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Icon, Input, Button, DatePicker} from 'antd'\nconst {TextArea} = Input;\n\nclass InputForm extends Component {\n\n    // method to be called upon submission of the form\n    handleSubmit=e=>{\n        e.preventDefault();\n        this.props.form.validateFields((err,values)=>{\n            if(!err){\n                console.log(\"Recieved Values of form\",values)\n            }\n        })\n    }\n\n    render() {\n        // defining some constants for use  \n        const {getFieldDecorator} = this.props.form;\n        const config = {\n            rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n        };\n        const formItemLayout = {\n            labelCol: {\n              xs: { span: 24 },\n              sm: { span: 5 },\n            },\n            wrapperCol: {\n              xs: { span: 24 },\n              sm: { span:15 },\n            },\n        };\n        const small={\n\n        }\n\n        // return the JSX to be displayed as the template\n        return (\n            <Form  onSubmit={this.handleSubmit} className=\"login-form\">\n\n                {/* form item for the first name */}\n                <Form.Item>\n\n                    {getFieldDecorator('firstName', {\n                        rules: [{ required: true, message: 'Please input your first name!' }],\n                    })\n                    (\n                        <Input\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.95)' }} />}\n                        placeholder=\"first name\"\n                        />,\n                    )}\n\n                </Form.Item>\n                {/* form item for the first name */}\n\n                {/* form item for the last name */}\n                <Form.Item>\n\n                    {getFieldDecorator('lastName', {\n                        rules: [{ required: true, message: 'Please input your last name!' }],\n                    })\n                    (\n                        <Input\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.95)' }} />}\n                        placeholder=\"last name\"\n                        />,\n                    )}\n\n                </Form.Item>\n                {/* form item for the last name */}\n                \n                {/* form item for the date picker */}\n                <Form.Item >\n                    {getFieldDecorator('date-picker', config)(<DatePicker />)}\n                </Form.Item>\n                {/* form item for the date picker */}\n                                \n                {/* form item for the last name */}\n                <Form.Item style={small}>\n                {getFieldDecorator('age', {\n                    rules: [{ required: true, message: 'Please input your last age!' }],\n                })\n                (\n                    <Input\n                    prefix={<Icon type=\"number\" style={{ color: 'rgba(0,0,0,.95)' }} />}\n                    placeholder=\"age\"\n                    />,\n                )}\n                </Form.Item>\n                {/* form item for the last name */}\n\n                {/* form item for the Hobbies */}\n                <Form.Item>\n                {getFieldDecorator('hobbies', {\n                    rules: [{ required: true, message: 'Please input your Hobbies!' }],\n                })\n                (\n                    <TextArea\n                    rows={4}\n                    prefix={<Icon type=\"text\" style={{ color: 'rgba(0,0,0,.95)' }} />}\n                    placeholder=\"Enter your hobbies\"\n                    />,\n                )}\n                </Form.Item>\n                {/* form item for the Hobbies*/}\n\n                {/* form item for the submit button */}\n                <Form.Item>\n\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Log in\n                    </Button>\n\n                </Form.Item>\n                {/* form item for the submit button */}\n\n            </Form>\n        )\n    }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(InputForm);\nexport default WrappedNormalLoginForm"]},"metadata":{},"sourceType":"module"}