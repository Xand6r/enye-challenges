{"ast":null,"code":"var _jsxFileName = \"/home/xander/Documents/workspace/enye/form/src/App.js\";\nimport React from 'react';\nimport Header from './components/layout/Header';\nimport Form from './components/InputForm';\nimport Table from \"./components/Table\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nstore.subscribe(() => store.getState());\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validateFields = fields => {\n      const formData = this.state.formData; // get the formdata from the fields\n      // append the newly gotten data to the table state\n\n      this.setState({\n        formData: [...formData, detail]\n      });\n    };\n\n    this.state = {\n      // form data is an array containing all the information entered in the form\n      formData: []\n    };\n  } // create a custom method to add information to the state \n\n\n  render() {\n    return (// wrap the app in provider to make store globally accesible\n      React.createElement(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: props => React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"formWrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(Form, {\n          customValidator: this.validateFields,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        })))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/table\",\n        render: props => React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(Table, {\n          className: \"table\",\n          tableData: this.state.formData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }))))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/xander/Documents/workspace/enye/form/src/App.js"],"names":["React","Header","Form","Table","BrowserRouter","Router","Route","Provider","store","subscribe","getState","App","Component","constructor","props","validateFields","fields","formData","state","setState","detail","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAO,WAAP;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEAA,KAAK,CAACC,SAAN,CAAgB,MAAID,KAAK,CAACE,QAAN,EAApB;;AAEA,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SASlBC,cATkB,GASFC,MAAD,IAAU;AAAA,YAEhBC,QAFgB,GAEN,KAAKC,KAFC,CAEhBD,QAFgB,EAGvB;AAEA;;AACA,WAAKE,QAAL,CAAc;AAACF,QAAAA,QAAQ,EAAC,CAAC,GAAGA,QAAJ,EAAaG,MAAb;AAAV,OAAd;AACD,KAhBiB;;AAEhB,SAAKF,KAAL,GAAW;AACT;AACAD,MAAAA,QAAQ,EAAC;AAFA,KAAX;AAID,GAP+B,CAShC;;;AAUAI,EAAAA,MAAM,GAAE;AACN,WACE;AACA,0BAAC,QAAD;AAAU,QAAA,KAAK,EAAEb,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAKE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,MAAM,EAAEM,KAAK,IAC7B,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,eAAe,EAAE,KAAKC,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CADF,CADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAkBE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,MAAM,EAAED,KAAK,IAClC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAyB,UAAA,SAAS,EAAE,KAAKI,KAAL,CAAWD,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBF,CADF,CAHF;AAFF;AAoCD;;AAxD+B;;AA2DlC,eAAeN,GAAf","sourcesContent":["import React from 'react';\nimport Header from './components/layout/Header';\nimport Form from './components/InputForm'\nimport Table from \"./components/Table\"\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './App.css';\n\nimport { Provider } from \"react-redux\"\nimport store from \"./store\" \n\nstore.subscribe(()=>store.getState())\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state={\n      // form data is an array containing all the information entered in the form\n      formData:[]\n    }\n  }\n  \n  // create a custom method to add information to the state \n  validateFields=(fields)=>{\n\n    const {formData}=this.state\n    // get the formdata from the fields\n\n    // append the newly gotten data to the table state\n    this.setState({formData:[...formData,detail]})\n  }\n\n  render(){\n    return (\n      // wrap the app in provider to make store globally accesible\n      <Provider store={store}>\n\n        {/* use a router to selectively display content */}\n        <Router>\n          <div className=\"App\">\n          {/* header component */}\n            <Header />\n\n            {/* route for the home page which contains the form */}\n            <Route exact path=\"/\" render={props=>(\n                  <React.Fragment>\n                    <div className=\"content\">\n                      <div className=\"formWrapper\">\n                        <Form customValidator={this.validateFields}/>\n                      </div>\n                    </div>\n                  </React.Fragment>\n                  )}>\n            </Route>\n\n\n            {/* route for the page which contains the table */}\n            <Route exact path=\"/table\" render={props=>(\n                  <React.Fragment>\n                    <Table className=\"table\" tableData={this.state.formData}/>\n                  </React.Fragment>\n                  )}>\n            </Route>\n\n          </div>\n        </Router>\n\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}