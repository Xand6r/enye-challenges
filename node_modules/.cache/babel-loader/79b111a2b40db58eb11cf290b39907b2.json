{"ast":null,"code":"import _classCallCheck from\"/home/xander/Documents/workspace/enye/form/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/xander/Documents/workspace/enye/form/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/xander/Documents/workspace/enye/form/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/xander/Documents/workspace/enye/form/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/xander/Documents/workspace/enye/form/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Form,Icon,Input,Button,DatePicker,message,InputNumber}from'antd';var TextArea=Input.TextArea;var InputForm=/*#__PURE__*/function(_Component){_inherits(InputForm,_Component);function InputForm(){var _getPrototypeOf2;var _this;_classCallCheck(this,InputForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(InputForm)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.success=function(){message.loading('Saving to database..',1.5).then(function(){return message.success('Finished saving',0.5);})//Clear the input field after all is said and done\n.then(function(){return _this.props.form.resetFields();});};_this.handleSubmit=function(e){e.preventDefault();_this.props.form.validateFields(function(err,values){// if there was no error save the information\nvar enteredYear=values['date-picker'].year();var calculatedAge=new Date().getFullYear()-Number(enteredYear);if(calculatedAge!==Number(values['age'])){message.error(\"Your age is incorrect, please align it with your year of birth!\",1.0);return;}if(!err){// send the field items to the app's state\n_this.props.customValidator(values);_this.success();// clear all the fields\n}else{message.error(\"there was an error saving, please try again!\",1.0);}});};return _this;}_createClass(InputForm,[{key:\"render\",value:function render(){// defining some constants for use  \nvar getFieldDecorator=this.props.form.getFieldDecorator;var config={rules:[{type:'object',required:true,message:'Please select time!'}]};var margin={marginRight:\"15px\"};// return the JSX to be displayed as the template\nreturn React.createElement(Form,{onSubmit:this.handleSubmit,className:\"login-form\"},React.createElement(\"div\",{className:\"titleBar\"},React.createElement(\"h3\",null,\"DATA\")),React.createElement(Form.Item,null,getFieldDecorator('firstName',{rules:[{required:true,message:'Please input your first name!'}]})(React.createElement(Input,{prefix:React.createElement(Icon,{type:\"user\",style:{color:'rgba(0,0,0,.95)'}}),placeholder:\"first name\"}))),React.createElement(Form.Item,null,getFieldDecorator('lastName',{rules:[{required:true,message:'Please input your last name!'}]})(React.createElement(Input,{prefix:React.createElement(Icon,{type:\"user\",style:{color:'rgba(0,0,0,.95)'}}),placeholder:\"last name\"}))),React.createElement(\"div\",{className:\"flex-container\"},React.createElement(Form.Item,{style:margin},getFieldDecorator('date-picker',config)(React.createElement(DatePicker,null))),React.createElement(Form.Item,null,getFieldDecorator('age',{rules:[{required:true,message:'Please input your age!'}]})(React.createElement(InputNumber,{min:0,prefix:React.createElement(Icon,{type:\"number\",style:{color:'rgba(0,0,0,.95)'}}),placeholder:\"age\"})))),React.createElement(Form.Item,null,getFieldDecorator('hobbies',{rules:[{required:true,message:'Please input your Hobbies!'}]})(React.createElement(TextArea,{rows:4,prefix:React.createElement(Icon,{type:\"text\",style:{color:'rgba(0,0,0,.95)'}}),placeholder:\"Enter your hobbies\"}))),React.createElement(Form.Item,null,React.createElement(Button,{style:{width:\"120px\",marginLeft:\"calc(50% - 60px)\",marginTop:\"30px\"},type:\"primary\",htmlType:\"submit\",className:\"login-form-button\"},\"Submit\")));}}]);return InputForm;}(Component);var WrappedNormalLoginForm=Form.create({name:'normal_login'})(InputForm);export default WrappedNormalLoginForm;","map":{"version":3,"sources":["/home/xander/Documents/workspace/enye/form/src/components/InputForm.js"],"names":["React","Component","Form","Icon","Input","Button","DatePicker","message","InputNumber","TextArea","InputForm","success","loading","then","props","form","resetFields","handleSubmit","e","preventDefault","validateFields","err","values","enteredYear","year","calculatedAge","Date","getFullYear","Number","error","customValidator","getFieldDecorator","config","rules","type","required","margin","marginRight","color","width","marginLeft","marginTop","WrappedNormalLoginForm","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Icon, Input, Button, DatePicker,message, InputNumber} from 'antd'\nconst {TextArea} = Input;\n\n\n\nclass InputForm extends Component {\n    // add a success message to display if the info was sucessfuly saved\n    success = () => {\n        message\n          .loading('Saving to database..', 1.5)\n          .then(() => message.success('Finished saving', 0.5))\n\n            //Clear the input field after all is said and done\n          .then(()=> this.props.form.resetFields());\n      };\n\n    // method to be called upon submission of the form\n    handleSubmit=e=>{\n        e.preventDefault();\n\n        this.props.form.validateFields((err,values)=>{\n            // if there was no error save the information\n            const enteredYear=values['date-picker'].year();\n            var calculatedAge = new Date().getFullYear() - Number(enteredYear);\n\n            if (calculatedAge !== Number(values['age'])){\n                message.error(\"Your age is incorrect, please align it with your year of birth!\",1.0);\n                return;\n            }\n            \n            if(!err){\n                // send the field items to the app's state\n                this.props.customValidator(values);\n                this.success();\n                // clear all the fields\n            }\n            else{\n                message.error(\"there was an error saving, please try again!\",1.0);\n            }\n        })\n    }\n\n    render() {\n        // defining some constants for use  \n        const {getFieldDecorator} = this.props.form;\n        const config = {\n            rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n        };\n\n        const margin={\n            marginRight:\"15px\"\n        }\n\n        // return the JSX to be displayed as the template\n        return (\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                <div className=\"titleBar\">\n                    <h3>DATA</h3>\n                </div>\n                {/* form item for the first name */}\n                <Form.Item>\n\n                    {getFieldDecorator('firstName', {\n                        rules: [{ required: true, message: 'Please input your first name!' }],\n                    })\n                    (\n                        <Input\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.95)' }} />}\n                        placeholder=\"first name\"\n                        />,\n                    )}\n\n                </Form.Item>\n                {/* form item for the first name */}\n\n                {/* form item for the last name */}\n                <Form.Item>\n\n                    {getFieldDecorator('lastName', {\n                        rules: [{ required: true, message: 'Please input your last name!' }],\n                    })\n                    (\n                        <Input\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.95)' }} />}\n                        placeholder=\"last name\"\n                        />,\n                    )}\n\n                </Form.Item>\n                {/* form item for the last name */}\n                \n                <div className=\"flex-container\">\n\n                    {/* form item for the date picker */}\n                    <Form.Item style={margin} >\n                        {getFieldDecorator('date-picker', config)(<DatePicker />)}\n                    </Form.Item>\n                    {/* form item for the date picker */}\n                                    \n                    {/* form item for the last name */}\n                    <Form.Item>\n                    {getFieldDecorator('age', {\n                        rules: [{ required: true, message: 'Please input your age!' }],\n                    })\n                    (\n                        <InputNumber\n                        min={0}\n                        prefix={<Icon type=\"number\" style={{ color: 'rgba(0,0,0,.95)' }} />}\n                        placeholder=\"age\"\n                        />,\n                    )}\n                    </Form.Item>\n                    {/* form item for the last name */}\n                \n                </div>\n\n                {/* form item for the Hobbies */}\n                <Form.Item>\n                {getFieldDecorator('hobbies', {\n                    rules: [{ required: true, message: 'Please input your Hobbies!' }],\n                })\n                (\n                    <TextArea\n                    rows={4}\n                    prefix={<Icon type=\"text\" style={{ color: 'rgba(0,0,0,.95)' }} />}\n                    placeholder=\"Enter your hobbies\"\n                    />,\n                )}\n                </Form.Item>\n                {/* form item for the Hobbies*/}\n\n                {/* form item for the submit button */}\n                <Form.Item>\n\n                    <Button style={{width:\"120px\",marginLeft:\"calc(50% - 60px)\",marginTop:\"30px\"}} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Submit\n                    </Button>\n\n                </Form.Item>\n                {/* form item for the submit button */}\n\n            </Form>\n        )\n    }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(InputForm);\nexport default WrappedNormalLoginForm"]},"metadata":{},"sourceType":"module"}