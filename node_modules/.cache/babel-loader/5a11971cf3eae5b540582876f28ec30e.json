{"ast":null,"code":"var _jsxFileName = \"/home/xander/Documents/workspace/enye/form/src/components/InputForm.js\";\nimport React, { Component } from 'react';\nimport { Form, Icon, Input, Button, DatePicker, message, InputNumber } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport addUser from \"../actions/addUser\";\nimport { use } from 'react';\nconst TextArea = Input.TextArea;\nconst Dispatch = useDispatch();\n\nfunction InputForm() {\n  // add a success message to display if the info was sucessfuly saved\n  success = () => {\n    message.loading('Saving to database..', 1.5).then(() => message.success('Finished saving', 0.5)) //Clear the input field after all is said and done\n    .then(() => props.form.resetFields());\n  }; // method to be called upon submission of the form\n\n\n  handleSubmit = e => {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      // if there was no error save the information\n      const enteredYear = values['date-picker'].year();\n      var calculatedAge = new Date().getFullYear() - Number(enteredYear);\n\n      if (calculatedAge !== Number(values['age'])) {\n        message.error(\"Your age is incorrect, please align it with your year of birth!\", 1.0);\n        return;\n      }\n\n      if (!err) {\n        // send the field items to the app's state\n        // props.customValidator(values);\n        Dispatch(addUser(values));\n        this.success(); // clear all the fields\n      } else {\n        message.error(\"there was an error saving, please try again!\", 1.0);\n      }\n    });\n  }; // defining some constants for use  \n\n\n  const getFieldDecorator = props.form.getFieldDecorator;\n  const config = {\n    rules: [{\n      type: 'object',\n      required: true,\n      message: 'Please select time!'\n    }]\n  };\n  const margin = {\n    marginRight: \"15px\"\n  }; // return the JSX to be displayed as the template\n\n  return React.createElement(Form, {\n    onSubmit: this.handleSubmit,\n    style: styles['loginForm'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: styles[\"titleBar\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    style: styles[\"title\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"DATA\")), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, getFieldDecorator('firstName', {\n    rules: [{\n      required: true,\n      message: 'Please input your first name!'\n    }]\n  })(React.createElement(Input, {\n    prefix: React.createElement(Icon, {\n      type: \"user\",\n      style: {\n        color: 'rgba(0,0,0,.95)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }),\n    placeholder: \"first name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, getFieldDecorator('lastName', {\n    rules: [{\n      required: true,\n      message: 'Please input your last name!'\n    }]\n  })(React.createElement(Input, {\n    prefix: React.createElement(Icon, {\n      type: \"user\",\n      style: {\n        color: 'rgba(0,0,0,.95)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }),\n    placeholder: \"last name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    style: styles[\"flexContainer\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    style: margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, getFieldDecorator('date-picker', config)(React.createElement(DatePicker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, getFieldDecorator('age', {\n    rules: [{\n      required: true,\n      message: 'Please input your age!'\n    }]\n  })(React.createElement(InputNumber, {\n    min: 0,\n    prefix: React.createElement(Icon, {\n      type: \"number\",\n      style: {\n        color: 'rgba(0,0,0,.95)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }),\n    placeholder: \"age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, getFieldDecorator('hobbies', {\n    rules: [{\n      required: true,\n      message: 'Please input your Hobbies!'\n    }]\n  })(React.createElement(TextArea, {\n    rows: 4,\n    prefix: React.createElement(Icon, {\n      type: \"text\",\n      style: {\n        color: 'rgba(0,0,0,.95)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }),\n    placeholder: \"Enter your hobbies\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }))), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Button, {\n    style: styles['buttonStyle'],\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"login-form-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Submit\")));\n}\n\nconst WrappedNormalLoginForm = Form.create({\n  name: 'normal_login'\n})(InputForm); // styles for this component\n\nconst styles = {\n  loginForm: {\n    maxWidth: \"500px\"\n  },\n  titleBar: {\n    textAlign: \"center\",\n    marginBottom: \"60px\"\n  },\n  title: {\n    fontSize: \"30px\",\n    color: \"rgb(34, 58, 109)\"\n  },\n  flexContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\"\n  },\n  buttonStyle: {\n    width: \"120px\",\n    marginLeft: \"calc(50% - 60px)\",\n    marginTop: \"30px\"\n  }\n};\nexport default WrappedNormalLoginForm;","map":{"version":3,"sources":["/home/xander/Documents/workspace/enye/form/src/components/InputForm.js"],"names":["React","Component","Form","Icon","Input","Button","DatePicker","message","InputNumber","useDispatch","addUser","use","TextArea","Dispatch","InputForm","success","loading","then","props","form","resetFields","handleSubmit","e","preventDefault","validateFields","err","values","enteredYear","year","calculatedAge","Date","getFullYear","Number","error","getFieldDecorator","config","rules","type","required","margin","marginRight","styles","color","WrappedNormalLoginForm","create","name","loginForm","maxWidth","titleBar","textAlign","marginBottom","title","fontSize","flexContainer","display","flexWrap","justifyContent","buttonStyle","width","marginLeft","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Icon, Input, Button, DatePicker,message, InputNumber} from 'antd'\nimport { useDispatch } from 'react-redux'\nimport addUser from \"../actions/addUser\"\nimport {use} from 'react'\n\nconst {TextArea} = Input;\nconst Dispatch=useDispatch();\n\n\nfunction InputForm() {\n    // add a success message to display if the info was sucessfuly saved\n    success = () => {\n        message\n          .loading('Saving to database..', 1.5)\n          .then(() => message.success('Finished saving', 0.5))\n\n            //Clear the input field after all is said and done\n          .then(()=> props.form.resetFields());\n      };\n\n    // method to be called upon submission of the form\n    handleSubmit=e=>{\n        e.preventDefault();\n\n        props.form.validateFields((err,values)=>{\n            // if there was no error save the information\n            const enteredYear=values['date-picker'].year();\n            var calculatedAge = new Date().getFullYear() - Number(enteredYear);\n\n            if (calculatedAge !== Number(values['age'])){\n                message.error(\"Your age is incorrect, please align it with your year of birth!\",1.0);\n                return;\n            }\n            \n            if(!err){\n                // send the field items to the app's state\n                // props.customValidator(values);\n                Dispatch(addUser(values))\n                this.success();\n                // clear all the fields\n            }\n            else{\n                message.error(\"there was an error saving, please try again!\",1.0);\n            }\n        })\n    }\n\n    // defining some constants for use  \n    const {getFieldDecorator} = props.form;\n    const config = {\n        rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n    };\n\n    const margin={\n        marginRight:\"15px\"\n    }\n\n        // return the JSX to be displayed as the template\n        return (\n            <Form onSubmit={this.handleSubmit} style={styles['loginForm']}>\n                <div style={styles[\"titleBar\"]}>\n                    <h3 style={styles[\"title\"]}>DATA</h3>\n                </div>\n                {/* form item for the first name */}\n                <Form.Item>\n\n                    {getFieldDecorator('firstName', {\n                        rules: [{ required: true, message: 'Please input your first name!' }],\n                    })\n                    (\n                        <Input\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.95)' }} />}\n                        placeholder=\"first name\"\n                        />,\n                    )}\n\n                </Form.Item>\n                {/* form item for the first name */}\n\n                {/* form item for the last name */}\n                <Form.Item>\n\n                    {getFieldDecorator('lastName', {\n                        rules: [{ required: true, message: 'Please input your last name!' }],\n                    })\n                    (\n                        <Input\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.95)' }} />}\n                        placeholder=\"last name\"\n                        />,\n                    )}\n\n                </Form.Item>\n                {/* form item for the last name */}\n                \n                <div style={styles[\"flexContainer\"]}>\n\n                    {/* form item for the date picker */}\n                    <Form.Item style={margin} >\n                        {getFieldDecorator('date-picker', config)(<DatePicker />)}\n                    </Form.Item>\n                    {/* form item for the date picker */}\n                                    \n                    {/* form item for the last name */}\n                    <Form.Item>\n                    {getFieldDecorator('age', {\n                        rules: [{ required: true, message: 'Please input your age!' }],\n                    })\n                    (\n                        <InputNumber\n                        min={0}\n                        prefix={<Icon type=\"number\" style={{ color: 'rgba(0,0,0,.95)' }} />}\n                        placeholder=\"age\"\n                        />,\n                    )}\n                    </Form.Item>\n                    {/* form item for the last name */}\n                \n                </div>\n\n                {/* form item for the Hobbies */}\n                <Form.Item>\n                {getFieldDecorator('hobbies', {\n                    rules: [{ required: true, message: 'Please input your Hobbies!' }],\n                })\n                (\n                    <TextArea\n                    rows={4}\n                    prefix={<Icon type=\"text\" style={{ color: 'rgba(0,0,0,.95)' }} />}\n                    placeholder=\"Enter your hobbies\"\n                    />,\n                )}\n                </Form.Item>\n                {/* form item for the Hobbies*/}\n\n                {/* form item for the submit button */}\n                <Form.Item>\n\n                    <Button style={styles['buttonStyle']} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Submit\n                    </Button>\n\n                </Form.Item>\n                {/* form item for the submit button */}\n\n            </Form>\n        )\n    }\n\n\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(InputForm);\n\n\n// styles for this component\nconst styles={\n    loginForm:{\n        maxWidth: \"500px\"\n    },\n    titleBar:{\n        textAlign: \"center\",marginBottom: \"60px\"\n    },\n    title:{\n        fontSize: \"30px\",color: \"rgb(34, 58, 109)\"\n    },\n    flexContainer:{\n        display: \"flex\",flexWrap: \"wrap\",justifyContent: \"space-between\"\n    },\n    buttonStyle:{\n        width:\"120px\",marginLeft:\"calc(50% - 60px)\",marginTop:\"30px\"\n    }\n}\n\n\n\nexport default WrappedNormalLoginForm"]},"metadata":{},"sourceType":"module"}